# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Specify we are using the latest NODE JS orb
orbs:
  node: circleci/node@5.0.2
  #puppeteer: threetreeslight/puppeteer@0.1.2

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  # Hello-World Job
  say-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"

  # Build and test the client dev and prod and src code
  build-and-test-client:
    # Set execution environment to latest node JS version
    # It auto performs NPM package installation and other steps
    executor: node/default
    steps:
      # Checkout the code as the first step
      - checkout

      # Set NPM as the Node package manager
      - node/install-packages:
        pkg-manager: "npm"

      # Run Unit Tests on Client src
      - run: 
          name: Run Client Src Unit Tests
          command: npm run test -- --selectProjects client

      # Build Dev Client
      - run:
          name: Build Dev Client
          command: |
            npm run buildDev

      # Run our tests
      - run: 
          name: Run Client Dev Build Unit Tests
          command: |
            npm run test -- --selectProjects build

      # Build Prod Client
      - run:
          name: Build Prod Client
          command: |
            npm run buildProd

      # Run our test
      - run: 
          name: Run Client Prod Build Unit Tests
          command: |
            npm run test -- --selectProjects build

  # Build and test the server
  build-and-test-server:
    # Set execution environment to latest node JS version
    # It auto performs NPM package installation and other steps
    executor: node/default
    steps:
      # Checkout the code as the first step
      - checkout

      # Set NPM as the Node package manager
      - node/install-packages:
        pkg-manager: "npm"

      # Run server unit tests
      - run: 
          name: Run Server Unit Tests
          command: |
            npm run test -- --selectProjects server

  e2e-testing: 
    # Set execution environment to latest node JS version
    # It auto performs NPM package installation and other steps
    executor: node/default
    steps:
      # Checkout the code as the first step
      - checkout

      # Set NPM as the Node package manager
      - node/install-packages:
        pkg-manager: "npm"

      #- Install Headless Chrome dependencies
      #- Install puppeteer with chronium

      - run:
        name: Install Headless Chrome dependencies
        command: >
          sudo apt-get install -yq \

          gconf-service libasound2 libatk1.0-0 libatk-bridge2.0-0 libc6 libcairo2
          libcups2 libdbus-1-3 \

          libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0
          libglib2.0-0 libgtk-3-0 libnspr4 \

          libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1
          libxcb1 libxcomposite1 libxcursor1 \

          libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1
          libxtst6 ca-certificates \

          fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget

      - run:
        name: Install puppeteer with chronium
        command: |
          npm i puppeteer
      
      # Build Prod Client
      - run:
          name: Build Prod Client
          command: |
            npm run buildProd

      # Run server unit tests
      - run: 
          name: Run Production E2E Tests
          command: |
            npm run test -- --selectProjects "End To End Tests"

  # Lint the src code
  lint: 
    # Set execution environment to latest node JS version
    executor: node/default
    steps:
      # Checkout the code as the first step
      - checkout

      # Set NPM as the Node package manager
      - node/install-packages:
        pkg-manager: "npm"

      # Lint the code
      - run: npm run lint

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  # Run the hello world job
  say-hello-workflow:
    jobs:
      - say-hello

  build-and-test-workflow:
    jobs:
      - lint
      - build-and-test-client
      - build-and-test-server
      - e2e-testing